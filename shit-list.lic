=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#shit-list
=end

custom_require.call(%w[drinfomon])

class ShitListRecorder

  def initialize
    arg_definitions = [
      [
        { name: 'add', regex: /add/i, description: 'Add name to list.' },
        { name: 'name', regex: /\w+/i, description: 'Name to add.' },
        { name: 'desc', regex: /.*$/i, description: 'Short description of why they were added in quotes.' }
      ],
      [
        { name: 'find', regex: /find/i, description: 'Find if name exists and gives their description.' },
        { name: 'name', regex: /\w+/i, description: 'Name of character to find.' }
      ],
      [
        { name: 'rem', regex: /rem.*/i, description: 'Remove name from list.' },
        { name: 'name', regex: /\w+/i, description: 'Name of character to remove.' }
      ],
      [
        { name: 'clear', regex: /clear/i, description: 'Clear list! WARNING!' },
        { name: 'confirm', regex: /confirm/i, description: 'CONFIRM YOUR CHOICE!.' }       
      ],
      []
    ]

    args = parse_args(arg_definitions)
    @file_name = "#{checkname}_shit.list"

    if args.add
      add_new_shitter(args.name.downcase, args.desc)
    elsif args.find
      find_shitter_in_list(args.name.downcase)
    elsif args.rem
      remove_shitter(args.name.downcase)
    elsif args.clear
      clear_list()
    else
      print_shit_list()
    end
  end

  def add_new_shitter(name, desc)
    File.open(@file_name, "a+") do |file|
      file.each { |line| 
        if line.split(',').first.eql?(name)
          DRC.message "Name already exists in your shit list!"
          exit
        end
      }
      file.write(format("%s\, %s\n", name, desc))
    end

    respond "Added #{format("%s\, %s", name, desc)} to your shit list!"

    if get_settings.integrate_shit_list_with_textsubs && Script.running?('textsubs')
      stop_script('textsubs')
      pause 2
      start_script('textsubs')
    end
  end

  def find_shitter_in_list(name_in)
    output = [] << "Found the shitter(s)!"

    File.open(@file_name, "r") do |file|
      file.each { |line|
        if line.split(',').first.include?(name_in)
          name = line.split(',').first
          line.slice!(name + ', ')
          output << format("Name: %s    Desc: %s", name.capitalize.ljust(10), line.capitalize)
        end
      }
    end

    respond output.sort if output.length > 1
  end

  def remove_shitter(name)
    name_removed = false
    shit_list_array = File.readlines(@file_name)

    File.open(@file_name, "w+") do |file|
      shit_list_array.each do |line|
        if name.eql?(line.split(',').first)
          name_removed = true
          respond "Removed #{name} from your Shit List!"
          next
        else
          file.write(format("%s", line))
        end
      end
    end

    respond "Could not find in your shit list!" unless name_removed
  end

  def print_shit_list()
    output = [] << "Current Shitters:"
    File.open(@file_name, "r") do |file|
      file.each { |line|
        name = line.split(',').first
        line.slice!(name + ', ')
        output << format("Name: %s    Desc: %s", name.capitalize.ljust(10), line.capitalize)
      }
    end

    respond output.sort
  end

  def clear_list()
    File.open(@file_name, "w") {}

    DRC.message "List cleared!"
  end
end

ShitListRecorder.new